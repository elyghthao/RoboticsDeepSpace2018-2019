// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3588.DeepSpaceCode.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3588.DeepSpaceCode.Robot;

/**
 *
 */
public class ManualClimbing extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ManualClimbing() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.climbing);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        if(Robot.oi.rightJoystick.getRawButton(2)) {
            Robot.climbing.extendSinglePiston();
            Robot.climbing.extendDoublePistons();
        }else if(Robot.oi.rightJoystick.getRawButton(5)){
            Robot.climbing.extendDoublePistons();
        }else if(Robot.oi.rightJoystick.getRawButton(6)){
            Robot.climbing.extendSinglePiston();
        }else if(Robot.oi.rightJoystick.getRawButton(3)){
            Robot.climbing.retractDoublePistons();
        }else if(Robot.oi.rightJoystick.getRawButton(4)){
            Robot.climbing.retractSinglePiston();
        }else{

            Robot.climbing.powerPistonMotor(Robot.oi.rightJoystick.getY());
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.climbing.powerPistonMotor(0.0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
}
