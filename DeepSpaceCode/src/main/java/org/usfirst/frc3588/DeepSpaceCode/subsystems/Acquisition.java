// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc3588.DeepSpaceCode.subsystems;

import org.usfirst.frc3588.DeepSpaceCode.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;

import java.awt.Robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

    import edu.wpi.first.wpilibj.Counter;

/**
 *
 */
public class Acquisition extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private WPI_TalonSRX configMotor;
    private WPI_TalonSRX armMotor;
    private DoubleSolenoid acquisitionSolenoid1;
    private Compressor compressor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public final double STOP = 0.0, MOVE = 1.0;
    // private Counter acquisitionCounter;
    public Acquisition() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        configMotor = new WPI_TalonSRX(13);
        
        
        
        armMotor = new WPI_TalonSRX(12);
        
        
        
        acquisitionSolenoid1 = new DoubleSolenoid(1, 0, 1);
        addChild("AcquisitionSolenoid1",acquisitionSolenoid1);
        
        
        compressor = new Compressor(1);
        addChild("compressor",compressor);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    compressor.setClosedLoopControl(true);
    }

    @Override
    public void initDefaultCommand() {
        
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new OpenCloseCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        compressor.setClosedLoopControl(true);

    }

    public void setConfigMotorSpeed(double speed) {
        configMotor.set(speed);
    }

    

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void openCloseMethod(DoubleSolenoid.Value state){
        acquisitionSolenoid1.set(state);
    }
    public DoubleSolenoid.Value getOpenClose(){
        return acquisitionSolenoid1.get();
    }
    public void open() {
        acquisitionSolenoid1.set(DoubleSolenoid.Value.kForward);
    }
    public void close () {
        acquisitionSolenoid1.set(DoubleSolenoid.Value.kReverse);
    }
}

